{"version":3,"sources":["utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","Component","constructor","props","super","state","min","texto","sponsor","level","levelPrice","balanceUSDT","deposit","bind","estado","componentDidMount","Utils","window","setInterval","trx","getAccount","accountAddress","address","fromHex","activeLevels","i","usersActiveX3Levels","call","cons","contractTRC20","balanceOf","parseInt","_hex","setState","amount","parseFloat","getBalance","balanceInSun","balanceInTRX","fromSun","console","log","owner","direccionSP","allowance","aproved","remaining","loc","document","location","href","indexOf","getString","split","GET","get","l","length","tmp","unescape","decodeURI","idToAddress","inversor","isUserExists","buyNewLevel","send","registrationExt","alert","approve","getElementById","value","render","className","onClick","direccion","link","registered","balanceRef","totalRef","invested","paidAt","my","withdrawn","Investors","Link","withdraw","mydireccion","users","user","id","canasta","usersX3Matrix","matrix","key","canastas","cosa","available","toFixed","style","text","type","TronLinkInfo","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","account","accountAddressInBase58","getBandwidth","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.349435bc.chunk.js","sourcesContent":["const utils = {\n  tronWeb: false,\n  contract: false,\n\n  setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n\n  async setContract(tronWeb, contractAddress) {\n    this.contract = await tronWeb.contract().at(contractAddress);\n  }\n};\n\nexport default utils;\n","const proxy = \"https://proxy-ewozx.herokuapp.com/\";\n\nconst SC = \"TQMpFtCgDJaJondLpFUbyTHMbeNQoEhKEV\";// direccion del contrato\n\nconst DT = \"TExwHCjZYbb7ToQUfQY5JgumwbcXAgeaVd\";// direccion del Token TRC 20\n\nexport default {proxy, SC, DT};","import cons from \"../../cons.js\";\n/// La direccion de su contrato acá ///////////////////////////////////\nconst contractAddress = cons.SC;\n\nexport default contractAddress;","import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nimport cons from \"../../cons.js\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      min: 200,\n      texto: \"Register\",\n      sponsor: \"\",\n      level: \"Loading...\",\n      levelPrice: 0,\n      balanceUSDT: \"Loading...\"\n  \n\n    };\n\n    this.deposit = this.deposit.bind(this);\n    this.estado = this.estado.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    this.estado();\n    setInterval(() => this.estado(),3*1000);\n  };\n\n  async estado(){\n\n    var accountAddress = await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n\n    var min = 20;\n\n    var activeLevels = 0;\n\n    for (var i = 15; i >= 0; i--) {\n\n      if (await Utils.contract.usersActiveX3Levels(accountAddress, i).call()) {\n        activeLevels++ ;\n      }\n      \n    }\n\n    var levelPrice = await Utils.contract.levelPrice(activeLevels+1).call();\n\n    var contractTRC20 = await window.tronWeb.contract().at(cons.DT);\n\n    var balanceUSDT = await contractTRC20.balanceOf(accountAddress).call();\n\n    balanceUSDT = parseInt(balanceUSDT._hex)/10**6;\n\n    this.setState({\n      min: min,\n      level: activeLevels,\n      levelPrice: parseInt(levelPrice._hex)/10**6,\n      balanceUSDT: balanceUSDT\n    });\n\n    //console.log(min);\n\n    \n\n  }\n\n\n  async deposit() {\n\n\n    const { min, level, levelPrice, balanceUSDT} = this.state;\n\n    var amount = levelPrice;\n\n    amount = parseFloat(amount);\n\n    var accountAddress = await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\n    var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\n    balanceInTRX = parseFloat(balanceInTRX);//number\n\n    console.log(balanceInTRX);\n    console.log(amount);\n\n    var owner = await Utils.contract.owner().call();\n\n    var direccionSP = window.tronWeb.address.fromHex(owner);\n\n    var contractTRC20 = await window.tronWeb.contract().at(cons.DT);\n\n    var aproved = await contractTRC20.allowance(accountAddress, contractAddress).call();\n\n    aproved = parseInt(aproved.remaining._hex)/10**6;\n\n\n\n    if ( balanceInTRX >= 50 && aproved >= amount && balanceUSDT >= amount){\n\n      var loc = document.location.href;\n      if(loc.indexOf('?')>0){\n          var getString = loc.split('?')[1];\n          var GET = getString.split('&');\n          var get = {};\n          for(var i = 0, l = GET.length; i < l; i++){\n              var tmp = GET[i].split('=');\n              get[tmp[0]] = unescape(decodeURI(tmp[1]));\n          }\n          \n          if (get['ref']) {\n            tmp = get['ref'].split('#');\n\n            var inversor = await Utils.contract.idToAddress(tmp[0]).call();\n\n            if ( await Utils.contract.isUserExists(inversor).call() ) {\n\n              direccionSP = window.tronWeb.address.fromHex(inversor);\n            \n            }\n          }     \n        }\n\n        this.setState({\n          sponsor: direccionSP\n        });\n\n\n        if ( amount >= min){\n\n\n          if ( await Utils.contract.isUserExists(accountAddress).call() ) {\n\n\n            await Utils.contract.buyNewLevel(level+1, amount*10**6).send();\n\n\n          }else{\n\n            await Utils.contract.registrationExt(direccionSP, 2*amount*10**6).send();\n\n          }\n\n        }else{\n          window.alert(\"Please enter an amount greater than 200 TRX\");\n        }\n\n        \n\n    }else{\n\n      console.log(aproved);\n\n      if ( aproved <= 0 ) {\n        await contractTRC20.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\n      }\n      \n      if (amount > 200 && balanceInTRX > 250) {\n\n        if ( amount > balanceInTRX) {\n          if (balanceInTRX <= 50) {\n            window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\n          }else{\n            document.getElementById(\"amount\").value = balanceInTRX-50;\n            window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\n          }\n          \n          \n\n        }else{\n\n          document.getElementById(\"amount\").value = amount-50;\n          window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\n          \n        }\n      }else{\n        window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\n      }\n    }\n    \n  };\n\n\n  render() {\n\n    var { min } = this.state;\n\n    min = \"Min. \"+min+\" TRX\";\n\n\n    \n    return (\n      \n\n        <div>\n          <h6 className=\"text-center\">\n            <strong>{this.state.balanceUSDT} USDT</strong><br />\n          </h6>\n\n          <div className=\"form-group text-center\">\n            <p className=\"card-text\">You must have ~ 50 TRX to make the transaction</p>\n\n            <p>current level = {this.state.level}</p>\n\n            <button  onClick={() => this.deposit()} >Buy next level</button>\n\n            <p>Price {this.state.levelPrice} USDT</p>\n            \n\n            \n            \n          </div>\n          \n        </div>\n      \n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      direccion: \"\",\n      link: \"Haz una inversión para obtener el LINK de referido\",\n      registered: false,\n      balanceRef: 0,\n      totalRef: 0,\n      invested: 0,\n      paidAt: 0,\n      my: 0,\n      withdrawn: 0\n\n    };\n\n    this.Investors = this.Investors.bind(this);\n    this.Link = this.Link.bind(this);\n    this.withdraw = this.withdraw.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    setInterval(() => this.Link(),1*1000);\n\n    setInterval(() => this.Investors(),2*1000);\n  };\n\n  async Link() {\n\n    let mydireccion = await window.tronWeb.trx.getAccount();\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address);\n\n      var user = await Utils.contract.users(mydireccion).call();\n\n    if( await Utils.contract.isUserExists(mydireccion).call() ){\n\n      let loc = document.location.href;\n      if(loc.indexOf('?')>0){\n        loc = loc.split('?')[0]\n      }\n      \n\n      mydireccion = loc+'?ref='+parseInt(user.id._hex);\n      this.setState({\n        link: mydireccion,\n      });\n    }else{\n      this.setState({\n        link: \"Haz una inversión para obtener el LINK de referido\",\n      });\n    }\n  }\n    \n\n  async Investors() {\n\n    var direccion = await window.tronWeb.trx.getAccount();\n    var direccion = window.tronWeb.address.fromHex(direccion.address);\n\n    var activeLevels = 0;\n\n    var canasta = [];\n\n    for (var i = 15; i >= 0; i--) {\n\n      if (await Utils.contract.usersActiveX3Levels(direccion, i).call()) {\n        activeLevels++ ;\n        var matrix = await Utils.contract.usersX3Matrix(direccion, i).call();\n        canasta[i] = (\n          <div className=\"col-sm-4 single-services\" key={\"level\"+i}>\n            <h4 className=\"pt-30 pb-20\">Nivel {i}</h4>\n            <p>\n              personas {matrix[1].length}| ciclos {parseInt(matrix[1].length/3)}\n            </p>\n          </div>);\n      }\n\n\n      \n    }\n\n\n \n\n\n\n    this.setState({\n      canastas:canasta\n\n    });\n\n  };\n\n  async withdraw(){\n    var cosa = await Utils.contract.withdraw().send();\n    console.log(cosa);\n  };\n\n\n  render() {\n    var { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\n\n    var available = (balanceRef+my);\n    available = available.toFixed(6);\n    available = parseFloat(available);\n\n    balanceRef = balanceRef.toFixed(6);\n    balanceRef = parseFloat(balanceRef);\n\n    totalRef = totalRef.toFixed(6);\n    totalRef = parseFloat(totalRef);\n\n    invested = invested.toFixed(6);\n    invested = parseFloat(invested);\n\n    withdrawn = withdrawn.toFixed(6);\n    withdrawn = parseFloat(withdrawn);\n\n    my = my.toFixed(6);\n    my = parseFloat(my);\n\n    return (\n\n      <section  id=\"office\" className=\"simple-services-area section-gap\">\n        <div className=\"container text-center\">\n          <header className=\"section-header\">\n            <h3 className=\"white\"><span style={{'fontweight': 'bold'}}>\n              My office:</span> \n            </h3>\n            <p>{direccion}</p><br />\n            <h3 className=\"white\" >Referral link:</h3>\n            <h6 className=\"aboutus-area\" style={{'padding': '1.5em', 'fontSize': '11px'}}><a href={link}>{link}</a><br /><br />\n            <CopyToClipboard text={link}>\n              <button type=\"button\" className=\"primary-btn header-btn text-uppercase \" style={{'paddingRight': '30px'}}>Copy to clipboard</button>\n            </CopyToClipboard>\n            </h6>\n            <hr></hr>\n            \n          </header>\n\n          <div className=\"row\">\n\n            {this.state.canastas}\n                    \n          </div>\n        </div>  \n      </section>\n      \n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TronLinkInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accountAddress: \"Billetera NO conectada\",\n      accountBalance: \"Billetera NO conectada\",\n      accountBandwidth: \"Billetera NO conectada\"\n    };\n  };\n\n  \n  componentDidMount() {\n    setInterval(() => this.fetchAccountAddress(),1000);\n    setInterval(() => this.fetchAccountBalance(),1000);\n    setInterval(() => this.fetchAccountBandwidth(),1000);\n  };\n\n\n  async fetchAccountAddress() {\n    const account =  await window.tronWeb.trx.getAccount();\n    const accountAddress = account.address;\n    const accountAddressInBase58 = window.tronWeb.address.fromHex(\n      accountAddress\n    );\n\n    this.setState({\n      accountAddress: accountAddressInBase58\n    });\n  };\n\n  async fetchAccountBalance() {\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\n\n    this.setState({\n      //accountBalance: balanceInSun // Muestra el balance en SUN\n      accountBalance: balanceInTRX\n    });\n  };\n  //\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\n  async fetchAccountBandwidth() {\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\n\n    this.setState({\n      accountBandwidth: accountBandwidth\n    });\n  };\n\n\n  render() {\n    const { accountAddress, accountBalance, accountBandwidth} = this.state;\n    return (\n\n\n          <div>\n            <h5 className=\"text-center\">Connected Wallet</h5>\n            <h6 className=\"text-center\">\n              Address:<br></br>\n               <strong><span style={{'fontSize': '11px'}}>{accountAddress}</span></strong><br></br><br></br>\n              Balance:<br></br>\n               <strong><span>{accountBalance} TRX</span></strong><br></br><br></br>\n              Bandwidth:<br></br>\n               <strong><span>{accountBandwidth}</span></strong><br></br>\n              \n            </h6>\n          </div>\n\n    \n    );\n  };\n}\n","import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\n\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='col-sm-4 text-center'>\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if(!installed) {\n        return (\n            <div className='row' onClick={ openTronLink }>\n                <div className='col-sm-8'>\n                    <h1>TronLink Required</h1>\n                    <p>\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                { logo }\n            </div>\n        );\n    }\n\n    return (\n    <>\n        <div className='tronLink row' onClick={ openTronLink } style={{'padding': '3em'}}>\n\n            <div className='info col-sm-8'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously created wallet.\n                </p>\n            </div>\n            { logo }\n        </div> \n\n    </>\n    );\n};\n\nexport default TronLinkGuide;","import React, { Component } from \"react\";\nimport TronWeb from \"tronweb\";\n\nimport Utils from \"../../utils\";\nimport CrowdFunding from \"../CrowdFunding\";\nimport Oficina from \"../Oficina\";\nimport TronLinkInfo from \"../TronLinkInfo\";\nimport TronLinkGuide from \"../TronLinkGuide\";\n\n\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n\n          const TRONGRID_API = \"https://api.trongrid.io\";\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            }\n          });\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) {\n          return tries++;\n        }\n\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object if TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS\n      };\n\n      window.tronWeb.on(\"addressChange\", () => {\n        if (this.state.tronWeb.loggedIn) {\n          return;\n        }\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true\n          }\n        });\n      });\n    }\n\n    Utils.setTronWeb(window.tronWeb);\n  }\n\n  render() {\n    if (!this.state.tronWeb.installed) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide />\n        </div>\n      </>\n      );\n\n    if (!this.state.tronWeb.loggedIn) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide installed />\n        </div>\n      </>\n      );\n\n    return (\n\n      <>\n\n      <section className=\"convert-area\" id=\"convert\">\n        <div className=\"container\">\n          <div className=\"convert-wrap\">\n            <div className=\"row justify-content-center align-items-center flex-column pb-30\">\n              <h1 className=\"text-white\">Make your investment</h1>           \n            </div>\n            <div className=\"row justify-content-center align-items-start\">\n\n              <div className=\"col-lg-6 cols\">\n                <CrowdFunding />\n              </div>\n\n              <div className=\"col-lg-6 cols\">\n                <TronLinkInfo />\n              </div>              \n              \n            </div>            \n          </div>\n        </div>  \n      </section>\n\n      <Oficina /> \n\n      </>\n    );\n\n  }\n}\nexport default App;\n\n// {tWeb()}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\n\nvar root = document.getElementById(\"root\");\n\n\nReactDOM.render(<App />, root);\n\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}