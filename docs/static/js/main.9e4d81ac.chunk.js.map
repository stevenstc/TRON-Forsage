{"version":3,"sources":["utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Datos/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","Component","constructor","props","super","state","min","deposit","bind","estado","componentDidMount","Utils","window","setInterval","MIN_DEPOSIT","call","parseInt","_hex","tarifa","setState","amount","document","getElementById","value","parseFloat","trx","getBalance","balanceInSun","balanceInTRX","fromSun","console","log","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","investors","inversors","registered","cons","sponsor","getAccount","account","accountAddress","address","fromHex","send","shouldPollResponse","callValue","alert","render","className","type","id","placeholder","style","src","height","alt","onClick","totalInvestors","totalInvested","totalRefRewards","setstate","esto","Investors","Invested","RefRewards","direccion","link","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","mydireccion","MYwithdrawable","My","cosa","available","toFixed","text","TronLinkInfo","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","accountAddressInBase58","getBandwidth","WEBSTORE_URL","logo","TronLinkLogo","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.9e4d81ac.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","const proxy = \"https://proxy-ewozx.herokuapp.com/\";\r\nconst PRU = \"shasta1.\";// shasta1. para inhabilitar red de pruebas\r\n\r\nconst WS = \"TCM7j4VVHkkBH9DJs4FmX8PbWg89hjkxsM\";//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\r\n\r\nconst SC = \"TN7NHCMKT5nFV6SrLbEN27C5hYDbcRSeBT\";// direccion del contrato\r\n\r\nexport default {proxy, PRU, WS,  SC};","import cons from \"../../cons.js\";\r\n/// La direccion de su contrato acá ///////////////////////////////////\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      min: 200\r\n  \r\n\r\n    };\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.estado = this.estado.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.estado();\r\n    setInterval(() => this.estado(),3*1000);\r\n  };\r\n\r\n  async estado(){\r\n\r\n\r\n    var min = await Utils.contract.MIN_DEPOSIT().call();\r\n\r\n    min = parseInt(min._hex)/1000000;\r\n\r\n\r\n    var tarifa = await Utils.contract.tarifa().call();\r\n\r\n    tarifa = parseInt(tarifa._hex);\r\n\r\n    this.setState({\r\n      min: min,\r\n      tarifa: tarifa\r\n    });\r\n\r\n    //console.log(min);\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n  async deposit() {\r\n\r\n\r\n    const { min } = this.state;\r\n\r\n\r\n    var amount = document.getElementById(\"amount\").value;\r\n    amount = parseFloat(amount);\r\n\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    balanceInTRX = parseFloat(balanceInTRX);//number\r\n\r\n    console.log(balanceInTRX);\r\n    console.log(amount);\r\n\r\n    if ( balanceInTRX-50 >= amount ){\r\n\r\n        var loc = document.location.href;\r\n        if(loc.indexOf('?')>0){\r\n            var getString = loc.split('?')[1];\r\n            var GET = getString.split('&');\r\n            var get = {};\r\n            for(var i = 0, l = GET.length; i < l; i++){\r\n                var tmp = GET[i].split('=');\r\n                get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n            }\r\n            \r\n            if (get['ref']) {\r\n              tmp = get['ref'].split('#');\r\n\r\n              var inversors = await Utils.contract.investors(tmp[0]).call();\r\n\r\n              console.log(inversors);\r\n\r\n              if ( inversors.registered ) {\r\n                document.getElementById('sponsor').value = tmp[0]; \r\n              }else{\r\n                document.getElementById('sponsor').value = cons.WS;         \r\n              }\r\n            }else{\r\n               document.getElementById('sponsor').value = cons.WS;\r\n            }\r\n               \r\n        }else{\r\n          \r\n            document.getElementById('sponsor').value = cons.WS; \r\n        }\r\n\r\n        var sponsor = document.getElementById(\"sponsor\").value;\r\n\r\n        const account =  await window.tronWeb.trx.getAccount();\r\n        var accountAddress = account.address;\r\n        accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n        var investors = await Utils.contract.investors(accountAddress).call();\r\n\r\n        if (investors.registered) {\r\n          \r\n          sponsor = investors.sponsor;\r\n          \r\n        }\r\n\r\n\r\n        if ( amount >= min){\r\n\r\n          document.getElementById(\"amount\").value = \"\";\r\n\r\n          await Utils.contract.deposit(sponsor).send({\r\n            shouldPollResponse: true,\r\n            callValue: amount * 1000000 // converted to SUN\r\n          });\r\n\r\n        }else{\r\n          window.alert(\"Please enter an amount greater than 200 TRX\");\r\n          document.getElementById(\"amount\").value = 200;\r\n        }\r\n\r\n        \r\n\r\n    }else{\r\n      \r\n      if (amount > 200 && balanceInTRX > 250) {\r\n\r\n        if ( amount > balanceInTRX) {\r\n          if (balanceInTRX-50 <= 0) {\r\n            document.getElementById(\"amount\").value = 0;\r\n            window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\r\n          }else{\r\n            document.getElementById(\"amount\").value = balanceInTRX-50;\r\n            window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\r\n          }\r\n          \r\n          \r\n\r\n        }else{\r\n\r\n          document.getElementById(\"amount\").value = amount-50;\r\n          window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\r\n          \r\n        }\r\n      }else{\r\n        window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var { min, tarifa } = this.state;\r\n\r\n    min = \"Min. \"+min+\" TRX\";\r\n\r\n    switch (tarifa) \r\n        {\r\n            case 0:  tarifa = 2;\r\n                     break;\r\n            case 1:  tarifa = 3;\r\n                     break;\r\n            case 2:  tarifa = 4;\r\n                     break;\r\n            case 3:  tarifa = 5;\r\n                     break;\r\n            case 4:  tarifa = 6;\r\n                     break;\r\n            \r\n            default: tarifa = \"N/A\";\r\n                     break;\r\n        }\r\n\r\n\r\n      \r\n\r\n    \r\n    return (\r\n      \r\n\r\n        <div>\r\n          <h6 className=\"text-center\">\r\n            Return: <strong>200%</strong><br />\r\n            <strong>{tarifa}%</strong> per day<br /><br />\r\n          </h6>\r\n\r\n          <div className=\"form-group text-center\">\r\n            <input type=\"number\" className=\"form-control mb-20 text-center\" id=\"amount\" placeholder={min}></input>\r\n            <p className=\"card-text\">You must have ~ 50 TRX to make the transaction</p>\r\n\r\n            <p> <img style={{'cursor': 'pointer'}} src=\"img/botonInvest.png\" height=\"120px\" alt=\"tron\" onClick={() => this.deposit()}/></p>\r\n\r\n            \r\n            \r\n          </div>\r\n          \r\n        </div>\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalInvestors: 0,\r\n      totalInvested: 0,\r\n      totalRefRewards: 0\r\n    };\r\n\r\n    this.totalInvestors = this.totalInvestors.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.totalInvestors(),1000);\r\n  };\r\n\r\n  async totalInvestors() {\r\n\r\n    let esto = await Utils.contract.setstate().call();\r\n    //console.log(esto);\r\n    this.setState({\r\n      totalInvestors: parseInt(esto.Investors._hex),\r\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\r\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\r\n\r\n    return (\r\n      <section id=\"stats\" className=\"section-gap aboutus-area\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 single-services\">\r\n              <h1 className=\"pt-40 pb-30 text-white\">{totalInvestors}</h1>\r\n              <p>\r\n                Global Investors\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-4 single-services\">\r\n              \r\n              <h1 className=\"pt-40 pb-30 text-white\">{totalInvested} TRX</h1>\r\n              <p>\r\n                Global Inverted\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-4 single-services\">\r\n              <h1 className=\"pt-40 pb-30 text-white\">{totalRefRewards} TRX</h1>\r\n              <p>\r\n                Global Referral Rewards\r\n              </p>\r\n            </div>                        \r\n          </div>\r\n        </div>    \r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccion: \"\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Investors(),1000);\r\n    setInterval(() => this.Link(),1000);\r\n  };\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceRef: parseInt(esto.balanceRef._hex)/1000000,\r\n      totalRef: parseInt(esto.totalRef._hex)/1000000,\r\n      invested: parseInt(esto.invested._hex)/1000000,\r\n      paidAt: parseInt(esto.paidAt._hex)/1000000,\r\n      my: parseInt(My.amount._hex)/1000000,\r\n      withdrawn: parseInt(esto.withdrawn._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    var cosa = await Utils.contract.withdraw().send();\r\n    console.log(cosa);\r\n  };\r\n\r\n\r\n  render() {\r\n    var { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\r\n\r\n    var available = (balanceRef+my);\r\n    available = available.toFixed(6);\r\n    available = parseFloat(available);\r\n\r\n    balanceRef = balanceRef.toFixed(6);\r\n    balanceRef = parseFloat(balanceRef);\r\n\r\n    totalRef = totalRef.toFixed(6);\r\n    totalRef = parseFloat(totalRef);\r\n\r\n    invested = invested.toFixed(6);\r\n    invested = parseFloat(invested);\r\n\r\n    withdrawn = withdrawn.toFixed(6);\r\n    withdrawn = parseFloat(withdrawn);\r\n\r\n    my = my.toFixed(6);\r\n    my = parseFloat(my);\r\n\r\n    return (\r\n\r\n      <section  id=\"office\" className=\"simple-services-area section-gap\">\r\n        <div className=\"container text-center\">\r\n          <header className=\"section-header\">\r\n            <h3 className=\"white\"><span style={{'fontweight': 'bold'}}>\r\n              My office:</span> \r\n            </h3>\r\n            <p>{direccion}</p><br />\r\n            <h3 className=\"white\" >Referral link:</h3>\r\n            <h6 className=\"aboutus-area\" style={{'padding': '1.5em', 'fontSize': '11px'}}><a href={link}>{link}</a><br /><br />\r\n            <CopyToClipboard text={link}>\r\n              <button type=\"button\" className=\"primary-btn header-btn text-uppercase \" style={{'paddingRight': '30px'}}>Copy to clipboard</button>\r\n            </CopyToClipboard>\r\n            </h6>\r\n            <hr></hr>\r\n            \r\n          </header>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{invested} TRX</h4>\r\n              <p>\r\n                Total invested\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{totalRef} TRX</h4>\r\n              <p>\r\n                Total earnings from referrals\r\n              \r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{my} TRX</h4>\r\n              <p>\r\n                My Profits\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{available} TRX</h4>\r\n              <p>\r\n                Available \r\n              </p>\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.withdraw()}>Withdrawal</button>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{withdrawn} TRX</h4>\r\n              <p>\r\n                withdrawn\r\n              \r\n              </p>\r\n            </div>\r\n                    \r\n          </div>\r\n        </div>  \r\n      </section>\r\n      \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TronLinkInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountAddress: \"Billetera NO conectada\",\r\n      accountBalance: \"Billetera NO conectada\",\r\n      accountBandwidth: \"Billetera NO conectada\"\r\n    };\r\n  };\r\n\r\n  \r\n  componentDidMount() {\r\n    setInterval(() => this.fetchAccountAddress(),1000);\r\n    setInterval(() => this.fetchAccountBalance(),1000);\r\n    setInterval(() => this.fetchAccountBandwidth(),1000);\r\n  };\r\n\r\n\r\n  async fetchAccountAddress() {\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address;\r\n    const accountAddressInBase58 = window.tronWeb.address.fromHex(\r\n      accountAddress\r\n    );\r\n\r\n    this.setState({\r\n      accountAddress: accountAddressInBase58\r\n    });\r\n  };\r\n\r\n  async fetchAccountBalance() {\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\r\n\r\n    this.setState({\r\n      //accountBalance: balanceInSun // Muestra el balance en SUN\r\n      accountBalance: balanceInTRX\r\n    });\r\n  };\r\n  //\r\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\r\n  async fetchAccountBandwidth() {\r\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\r\n\r\n    this.setState({\r\n      accountBandwidth: accountBandwidth\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { accountAddress, accountBalance, accountBandwidth} = this.state;\r\n    return (\r\n\r\n\r\n          <div>\r\n            <h5 className=\"text-center\">Connected Wallet</h5>\r\n            <h6 className=\"text-center\">\r\n              Address:<br></br>\r\n               <strong><span style={{'fontSize': '11px'}}>{accountAddress}</span></strong><br></br><br></br>\r\n              Balance:<br></br>\r\n               <strong><span>{accountBalance} TRX</span></strong><br></br><br></br>\r\n              Bandwidth:<br></br>\r\n               <strong><span>{accountBandwidth}</span></strong><br></br>\r\n              \r\n            </h6>\r\n          </div>\r\n\r\n    \r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-sm-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row' onClick={ openTronLink }>\r\n                <div className='col-sm-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <div className='tronLink row' onClick={ openTronLink } style={{'padding': '3em'}}>\r\n\r\n            <div className='info col-sm-8'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div> \r\n\r\n    </>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Datos from \"../Datos\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkInfo from \"../TronLinkInfo\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n      <section className=\"convert-area\" id=\"convert\">\r\n        <div className=\"container\">\r\n          <div className=\"convert-wrap\">\r\n            <div className=\"row justify-content-center align-items-center flex-column pb-30\">\r\n              <h1 className=\"text-white\">Make your investment</h1>           \r\n            </div>\r\n            <div className=\"row justify-content-center align-items-start\">\r\n\r\n              <div className=\"col-lg-6 cols\">\r\n                <CrowdFunding />\r\n              </div>\r\n\r\n              <div className=\"col-lg-6 cols\">\r\n                <TronLinkInfo />\r\n              </div>              \r\n              \r\n            </div>            \r\n          </div>\r\n        </div>  \r\n      </section>\r\n\r\n      <Oficina />   \r\n\r\n      <Datos />    \r\n\r\n      </>\r\n    );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}